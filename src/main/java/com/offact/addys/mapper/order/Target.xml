<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Target">

<resultMap id="targetVO" type="com.offact.addys.vo.order.TargetVO" >
  <result column="orderCode"      property="orderCode"  />
  <result column="groupId"          property="groupId"  />
  <result column="groupName"      property="groupName"  />
  <result column="companyCode"      property="companyCode"  />
  <result column="companyName"      property="companyName"  />
  <result column="faxKey"        property="faxKey"  />
  <result column="smsKey"        property="smsKey"  />
  <result column="emailKey"        property="emailKey"  />
  <result column="faxNumber"        property="faxNumber"  />
  <result column="mobilePhone"        property="mobilePhone"  />
  <result column="email"        property="email"  />
  <result column="telNumber"        property="telNumber"  />
  <result column="orderDate"        property="orderDate"  />
  <result column="deliveryDate"        property="deliveryDate"  />
  <result column="deliveryMethod"        property="deliveryMethod"  />
  <result column="deliveryEtc"        property="deliveryEtc"  />
  <result column="deliveryCharge"        property="deliveryCharge"  />
  <result column="orderCharge"        property="orderCharge"  />
  <result column="orderEtc"        property="orderEtc"  />
  <result column="orderAddress"        property="orderAddress"  />
  <result column="orderFaxNumber"        property="orderFaxNumber"  />
  <result column="orderMobilePhone"        property="orderMobilePhone"  />
  <result column="orderEmail"        property="orderEmail"  />
  <result column="orderTelNumber"        property="orderTelNumber"  />
  <result column="payMethod"        property="payMethod"  />
  <result column="buyResult"        property="buyResult"  />
  <result column="buyResultView"        property="buyResultView"  />
  <result column="orderState"        property="orderState"  />
  <result column="orderStateView"        property="orderStateView"  />
  <result column="buyDateTime"        property="buyDateTime"  />
  <result column="buyUserId"        property="buyUserId"  />
  <result column="buyUserName"        property="buyUserName"  />
  <result column="orderDateTime"     property="orderDateTime"  />
  <result column="orderUserID"          property="orderUserID"  />
  <result column="orderUserName"           property="orderUserName"  />
  <result column="deferDateTime"     property="deferDateTime"  />
  <result column="deferUserId"          property="deferUserId"  />
  <result column="deferUserName"           property="deferUserName"  />
  <result column="sms"           property="sms"  />
  <result column="memo"           property="memo"  />
  <result column="productCode"        property="productCode"  />
  <result column="productName"        property="productName"  />
  <result column="stockDate"        property="stockDate"  />
  <result column="stockCnt"        property="stockCnt"  />
  <result column="safeStock"        property="safeStock"  />
  <result column="holdStock"        property="holdStock"  />
  <result column="productPrice"        property="productPrice"  />
  <result column="vatRate"        property="vatRate"  />
  <result column="vat"        property="vat"  />
  <result column="orderCnt"        property="orderCnt"  />
  <result column="orderPrice"        property="orderPrice"  />
  <result column="safeOrderCnt"        property="safeOrderCnt"  />
  <result column="deferCheck"        property="deferCheck"  />
  <result column="addCnt"        property="addCnt"  />
  <result column="lossCnt"        property="lossCnt"  />
  <result column="minusCnt"        property="minusCnt"  />
  <result column="group1Name"        property="group1Name"  />
  <result column="deferCnt"        property="deferCnt"  />
  <result column="targetCnt"        property="targetCnt"  />
  <result column="deliveryName"        property="deliveryName"  />
  <result column="orderName"        property="orderName"  />
  <result column="orderAddYn"        property="orderAddYn"  />
  <result column="orderAddChk"        property="orderAddChk"  />
</resultMap>

<select id="getTargetPageList"  resultMap="targetVO" parameterType="com.offact.addys.vo.order.TargetVO" >

  Select T1.orderCode,
         T5.codeName As orderStateView,
         T1.orderState,
         T1.limitStartDate,
         T1.limitEndDate,
         T1.groupID,
         T4.groupName,
         T4.address as orderAddress,
		 T1.companyCode,
         T1.companyName,
         SUM(T1.orderCnt) as orderCnt,/*안전재고 기준점 TOTAL  해당*/
	   	 SUM(T1.orderCnt*T1.productPrice) as productPrice,/*안전재고 기준점 TOTAL 해당*/
	   	 SUM(round((T1.orderCnt*T1.productPrice)*T1.vatRate)) as vat,/*안전재고 기준점 TOTAL 해당*/
         (SUM(T1.orderCnt*T1.productPrice)+SUM(round((T1.orderCnt*T1.productPrice)*T1.vatRate))) as orderPrice,/*안전재고 기준점 TOTAL 해당*/
         /*COUNT(T1.productCode) as safeOrderCnt,*/
         Case T1.orderState When '02' Then T6.safeOrderCnt
  						    Else COUNT(T1.productCode)
         				    End safeOrderCnt,/*안전재고 기준점 발생품목수량*/
         Case date_format(date(max(T1.stockDate)),'%Y-%m-%d') When '1999-01-02' Then date_format(date(now()),'%Y-%m-%d') Else date_format(date(max(T1.stockDate)),'%Y-%m-%d') End stockDate  /*재고현황 기준일*/
  From (
	      Select TEMP.orderState ,
		         TEMP.stockCnt,
				 TEMP.safeStock,
                 TEMP.holdStock,
				 TEMP.groupID,
				 TEMP.productCode,
				 TEMP.orderCode,
				 (TEMP.holdStock-TEMP.stockCnt) as orderCnt,
				 TEMP.stockChk as stockDate,
				 TEMP.productPrice,
				 TEMP.productName,
                 TEMP.vatRate,
                 TEMP.companyCode,
                 TEMP.companyName,
                 TEMP.limitStartDate,
                 TEMP.limitEndDate
		    From (
					Select I1.groupID,
					       I1.productCode,
					       ifnull(I1.safeStock,0) as safeStock,/*안전재고수량*/
                           ifnull(I1.holdStock,0) as holdStock,/*보유재고수량*/
                           /*ifnull(I2.stockCnt,0) as stockCnt,*//*재고수량*/ 
                           ifnull((Select A1.stockCnt From adStockDetail A1 Where A1.groupId=I1.groupId and A1.productCode=I1.productCode and I2.stockDate=A1.stockDate),0)  as stockCnt, /*재고수량*/ 
						   ifnull(I2.stockDate,'1999-01-02') as stockChk,/*재고기준일*/
               		       /*ifnull(I3.deferDate,'1999-01-01') as deferChk,*//*보류기준일*/
						   /*ifnull(I4.orderDate,'1999-01-01') as orderChk,*//*발주기준일*/
               			   ifnull(DATE_FORMAT(I5.buyDate, '%Y-%m-%d'),'1999-01-01') as buyChk,/*구매기준일*/
               			   
               			   T2.productPrice,
               			   T2.productName,
               			   T2.vatRate,
               			   T2.companyCode,
               			   T3.companyName,
               			   T7.limitStartDate,
               			   T7.limitEndDate,
               			   
                           Case When ifnull(I6.orderState,'01') in ('01','07','08','09') Then 'X' Else ifnull(I6.orderCode,'X') End orderCode,/*최신발주코드*/
                           Case When ifnull(I6.orderState,'01') in ('01','07','08','09') And date_format(now(),'%Y-%m-%d') Between T7.limitStartDate  and  T7.limitEndDate Then '00' /*제한상태*/
                                Else (Case When I6.orderState in ('07','08','09') Then '01' Else ifnull(I6.orderState,'01') End ) /*최신발주상태 (07:등록완료 08:발주보류취소 09:검수취소)->대기상태*/
                                End orderState /*최신발주상태*/
                                
					  From adStockMaster I1
					  		  Left Join ( Select groupId, max(stockDate) as stockDate 
                       					  	From adStock
                        			   		Group By groupID
                		 			   	) As I2 On I1.groupId = I2.groupId /*재고기준일*/
						 /*  Left Join(
									 Select groupID,productCode,stockDate,
                     						(Select stockCnt From adStockDetail Where A1.groupId=groupId and A1.productCode=productCode and A1.stockDate=stockDate)  as stockCnt
                					 	From ( 
                        					  Select groupId,productCode , max(stockDate) as stockDate 
                       						  	From adStockDetail 
                        						Group By  groupID,productCode 
                        					 ) As A1
									  ) As I2 On I1.productCode = I2.productCode And I1.groupID = I2.groupID *//*재고기준일*/
						/* Left Join(
									 Select groupID,productCode,deferDate
                					 	From ( 
                        					  Select C2.groupId,C1.productCode , max(C2.deferDateTime) as deferDate 
                       						  	From adOrderDetail C1
                                       				Left Join adOrder C2 On C1.orderCode=C2.orderCode
                        							Group By  groupID,productCode 
                        					 ) As A2
									  ) As I3 On I1.productCode = I3.productCode And I1.groupID = I3.groupID *//*보류기준일*/
                		/* Left Join(
									 Select groupID,productCode,orderDate
                						 From ( 
                        					   Select C4.groupId,C3.productCode , max(C4.orderDateTime) as orderDate 
                       						     From adOrderDetail C3
                                                     Left Join adOrder C4 On C3.orderCode=C4.orderCode
                        							 Group By  groupID,productCode 
                        					  ) As A3
									 ) As I4 On I1.productCode = I4.productCode And I1.groupID = I4.groupID *//*주문기준일*/
                           Left Join(
									 Select groupID,productCode,buyDate
                					 	From ( 
                        					  Select C6.groupId,C5.productCode , max(C6.buyDateTime) as buyDate 
                       						  	From adOrderDetail C5
                                       				Left Join adOrder C6 On C5.orderCode=C6.orderCode
                        							Group By  groupID,productCode 
                        					 ) As A4
									 ) As I5 On I1.productCode = I5.productCode And I1.groupID = I5.groupID /*구매기준일*/   
                           Left Join(
									  Select groupID,productCode,updateDate,
                           					(Select max(orderCode) From adOrderDetail Where A5.groupId=groupId and A5.productCode=productCode and A5.updateDate=updateDateTime)  as orderCode,
                           					(Select C10.orderState 
                               					From adOrderDetail C9
                                    				Left Join adOrder C10 On C9.orderCode = C10.orderCode
                               					Where A5.groupId=groupId and A5.productCode=productCode and A5.updateDate=updateDateTime) as orderState
                					  	From ( 
                        					  Select C8.groupId,C7.productCode,C8.orderCode,C8.orderState, max(C7.updateDateTime) as updateDate 
                       						  	From adOrderDetail C7
                                       				Left Join adOrder C8 On C7.orderCode=C8.orderCode
                        							Group By  groupID,productCode 
                        					 ) A5
									) As I6 On I1.productCode = I6.productCode And I1.groupID = I6.groupID /*업데이트상태 및 주문번호*/ 
									Left Join adProductMaster T2 On I1.ProductCode = T2.ProductCode
                   					Left Join adCompany T3 On T2.companyCode = T3.companyCode 
                   					Left Join adOrderLimit T7 On I1.groupID=T7.groupId And  T2.companyCode=T7.companyCode And T7.deletedYn='N'
					     Where I1.deletedYn='N' And (I1.safeStock > 0 Or I1.holdStock >0) 
					     <if test="con_groupId != null and con_groupId != '' and con_groupId != 'G00000'" >
           					AND I1.groupId = #{con_groupId}
           				 </if>
					   ) As TEMP
		      Where TEMP.stockCnt  <![CDATA[<=]]> TEMP.safeStock
					And TEMP.stockChk <![CDATA[>=]]>  TEMP.buyChk
					And TEMP.stockCnt  <![CDATA[<]]> TEMP.holdStock 
					<choose>
						<when  test="con_orderState != null and con_orderState != ''">
							AND TEMP.orderState = #{con_orderState}
						</when>
						<when  test="con_orderState == null || con_orderState == ''">
							AND TEMP.orderState in ('00','01','02')
						</when>
				   </choose>
			  ) T1
              Left Join ofGroup T4 On T1.groupID = T4.groupID 
       		  Left Join ofCode T5 On T1.orderState = T5.codeId and T5.codeGroupId = 'OD01'
        	  Left Join adOrder T6 On T1.orderCode = T6.orderCode 
              Where 1=1
                    <if test="searchValue != null and searchValue != ''" >
             		<choose>
               			<when test="searchGubun.equals('01')">
           					AND T1.companyName  LIKE CONCAT('%', #{searchValue}, '%')
               			</when>
               			<when test="searchGubun.equals('02')">
           					AND T1.companyCode  LIKE CONCAT('%', #{searchValue}, '%')
               			</when>
               			<when test="searchGubun.equals('03')">
           					AND T1.productName  LIKE CONCAT('%', #{searchValue}, '%')
               			</when>
               			<when test="searchGubun.equals('04')">
           					AND T1.productCode  LIKE CONCAT('%', #{searchValue}, '%')
               			</when>
             		</choose>
           			</if> 
			  Group By T1.groupID,
			           T1.companyCode,
			           T1.orderState
			  Order by safeOrderCnt desc , groupID asc
			  LIMIT ${page_limit_val1} , ${page_limit_val2}
		
</select>

<select id="getTargetCnt" resultType="int">

SELECT count(*) AS TOT_COUNT
From (
    Select T1.orderCode,
         T5.codeName As orderStateView,
         T1.orderState,
         T1.limitStartDate,
         T1.limitEndDate,
         T1.groupID,
         T4.groupName,
		 T1.companyCode,
         T1.companyName,
         SUM(T1.orderCnt) as orderCnt,/*안전재고 기준점 TOTAL  해당*/
	   	 SUM(T1.orderCnt*T1.productPrice) as productPrice,/*안전재고 기준점 TOTAL 해당*/
	   	 SUM(round((T1.orderCnt*T1.productPrice)*T1.vatRate)) as vat,/*안전재고 기준점 TOTAL 해당*/
         (SUM(T1.orderCnt*T1.productPrice)+SUM(round((T1.orderCnt*T1.productPrice)*T1.vatRate))) as orderPrice,/*안전재고 기준점 TOTAL 해당*/
         /*COUNT(T1.productCode) as safeOrderCnt,*/
         Case T1.orderState When '02' Then T6.safeOrderCnt
  						    Else COUNT(T1.productCode)
         				    End safeOrderCnt,/*안전재고 기준점 발생품목수량*/
         date_format(date(max(T1.stockDate)),'%Y-%m-%d') as stockDate  /*재고현황 기준일*/
  From (
	      Select TEMP.orderState ,
		         TEMP.stockCnt,
				 TEMP.safeStock,
                 TEMP.holdStock,
				 TEMP.groupID,
				 TEMP.productCode,
				 TEMP.productName,
				 TEMP.orderCode,
				 (TEMP.holdStock-TEMP.stockCnt) as orderCnt,
				 TEMP.stockChk as stockDate,
				 TEMP.productPrice,
                 TEMP.vatRate,
                 TEMP.companyCode,
                 TEMP.companyName,
                 TEMP.limitStartDate,
                 TEMP.limitEndDate
		    From (
					Select I1.groupID,
					       I1.productCode,
					       ifnull(I1.safeStock,0) as safeStock,/*안전재고수량*/
                           ifnull(I1.holdStock,0) as holdStock,/*보유재고수량*/
                           /*ifnull(I2.stockCnt,0) as stockCnt,*//*재고수량*/ 
                           ifnull((Select A1.stockCnt From adStockDetail A1 Where A1.groupId=I1.groupId and A1.productCode=I1.productCode and I2.stockDate=A1.stockDate),0)  as stockCnt, /*재고수량*/  
						   ifnull(I2.stockDate,'1999-01-02') as stockChk,/*재고기준일*/
               		       /*ifnull(I3.deferDate,'1999-01-01') as deferChk,*//*보류기준일*/
						   /*ifnull(I4.orderDate,'1999-01-01') as orderChk,*//*발주기준일*/
               			   ifnull(DATE_FORMAT(I5.buyDate, '%Y-%m-%d'),'1999-01-01') as buyChk,/*구매기준일*/
               			   
               			   T2.productPrice,
               			   T2.productName,
               			   T2.vatRate,
               			   T2.companyCode,
               			   T3.companyName,
               			   T7.limitStartDate,
               			   T7.limitEndDate,
               			   
                           Case When ifnull(I6.orderState,'01') in ('01','07','08','09') Then 'X' Else ifnull(I6.orderCode,'X') End orderCode,/*최신발주코드*/
                           Case When ifnull(I6.orderState,'01') in ('01','07','08','09') And date_format(now(),'%Y-%m-%d') Between T7.limitStartDate  and  T7.limitEndDate Then '00' /*제한상태*/
                                Else (Case When I6.orderState in ('07','08','09') Then '01' Else ifnull(I6.orderState,'01') End ) /*최신발주상태 (07:등록완료 08:발주보류취소 09:검수취소)->대기상태*/
                                End orderState /*최신발주상태*/
                                
					  From adStockMaster I1
					  		  Left Join ( Select groupId, max(stockDate) as stockDate 
                       					  	From adStock
                        			   		Group By groupID
                		 			   	) As I2 On I1.groupId = I2.groupId /*재고기준일*/
						 /*  Left Join(
									 Select groupID,productCode,stockDate,
                     						(Select stockCnt From adStockDetail Where A1.groupId=groupId and A1.productCode=productCode and A1.stockDate=stockDate)  as stockCnt
                					 	From ( 
                        					  Select groupId,productCode , max(stockDate) as stockDate 
                       						  	From adStockDetail 
                        						Group By  groupID,productCode 
                        					 ) As A1
									  ) As I2 On I1.productCode = I2.productCode And I1.groupID = I2.groupID *//*재고기준일*/
						/* Left Join(
									 Select groupID,productCode,deferDate
                					 	From ( 
                        					  Select C2.groupId,C1.productCode , max(C2.deferDateTime) as deferDate 
                       						  	From adOrderDetail C1
                                       				Left Join adOrder C2 On C1.orderCode=C2.orderCode
                        							Group By  groupID,productCode 
                        					 ) As A2
									  ) As I3 On I1.productCode = I3.productCode And I1.groupID = I3.groupID *//*보류기준일*/
                		/* Left Join(
									 Select groupID,productCode,orderDate
                						 From ( 
                        					   Select C4.groupId,C3.productCode , max(C4.orderDateTime) as orderDate 
                       						     From adOrderDetail C3
                                                     Left Join adOrder C4 On C3.orderCode=C4.orderCode
                        							 Group By  groupID,productCode 
                        					  ) As A3
									 ) As I4 On I1.productCode = I4.productCode And I1.groupID = I4.groupID *//*주문기준일*/
                           Left Join(
									 Select groupID,productCode,buyDate
                					 	From ( 
                        					  Select C6.groupId,C5.productCode , max(C6.buyDateTime) as buyDate 
                       						  	From adOrderDetail C5
                                       				Left Join adOrder C6 On C5.orderCode=C6.orderCode
                        							Group By  groupID,productCode 
                        					 ) As A4
									 ) As I5 On I1.productCode = I5.productCode And I1.groupID = I5.groupID /*구매기준일*/   
                           Left Join(
									  Select groupID,productCode,updateDate,
                           					(Select max(orderCode) From adOrderDetail Where A5.groupId=groupId and A5.productCode=productCode and A5.updateDate=updateDateTime)  as orderCode,
                           					(Select C10.orderState 
                               					From adOrderDetail C9
                                    				Left Join adOrder C10 On C9.orderCode = C10.orderCode
                               					Where A5.groupId=groupId and A5.productCode=productCode and A5.updateDate=updateDateTime) as orderState
                					  	From ( 
                        					  Select C8.groupId,C7.productCode,C8.orderCode,C8.orderState, max(C7.updateDateTime) as updateDate 
                       						  	From adOrderDetail C7
                                       				Left Join adOrder C8 On C7.orderCode=C8.orderCode
                        							Group By  groupID,productCode 
                        					 ) A5
									) As I6 On I1.productCode = I6.productCode And I1.groupID = I6.groupID /*업데이트상태 및 주문번호*/ 
									Left Join adProductMaster T2 On I1.ProductCode = T2.ProductCode
                   					Left Join adCompany T3 On T2.companyCode = T3.companyCode 
                   					Left Join adOrderLimit T7 On I1.groupID=T7.groupId And  T2.companyCode=T7.companyCode  And T7.deletedYn='N'
					     Where I1.deletedYn='N' And (I1.safeStock > 0 Or I1.holdStock >0)
					     <if test="con_groupId != null and con_groupId != '' and con_groupId != 'G00000'" >
           					AND I1.groupId = #{con_groupId}
           				 </if>
					   ) As TEMP
		      Where TEMP.stockCnt  <![CDATA[<=]]> TEMP.safeStock
					And TEMP.stockChk <![CDATA[>=]]>  TEMP.buyChk
					And TEMP.stockCnt  <![CDATA[<]]> TEMP.holdStock 
					<choose>
						<when  test="con_orderState != null and con_orderState != ''">
							AND TEMP.orderState = #{con_orderState}
						</when>
						<when  test="con_orderState == null || con_orderState == ''">
							AND TEMP.orderState in ('00','01','02')
						</when>
				   </choose>
			  ) T1
              Left Join ofGroup T4 On T1.groupID = T4.groupID 
       		  Left Join ofCode T5 On T1.orderState = T5.codeId and T5.codeGroupId = 'OD01'
        	  Left Join adOrder T6 On T1.orderCode = T6.orderCode 
              Where 1=1
                    <if test="searchValue != null and searchValue != ''" >
             		<choose>
               			<when test="searchGubun.equals('01')">
           					AND T1.companyName  LIKE CONCAT('%', #{searchValue}, '%')
               			</when>
               			<when test="searchGubun.equals('02')">
           					AND T1.companyCode  LIKE CONCAT('%', #{searchValue}, '%')
               			</when>
               			<when test="searchGubun.equals('03')">
           					AND T1.productName  LIKE CONCAT('%', #{searchValue}, '%')
               			</when>
               			<when test="searchGubun.equals('04')">
           					AND T1.productCode  LIKE CONCAT('%', #{searchValue}, '%')
               			</when>
             		</choose>
           			</if> 
			  Group By T1.groupID,
			           T1.companyCode,
			           T1.orderState
	) As TOT
			           
</select>

<select id="getStateCnt" resultMap="targetVO" >

Select Sum(deferCnt) As deferCnt ,Sum(targetCnt) As targetCnt,Sum(failureCnt) As failureCnt
  From (
		Select X.groupId,
       		   X.companyCode,
       		   sum(deferCnt) as deferCnt,
       		   sum(targetCnt) as targetCnt,
       		   sum(failureCnt) as failureCnt
    	 From  (
  				  Select T1.groupID,
						 T1.companyCode,
    					 Case When T1.orderState = '02' Then 1 Else 0 End deferCnt,
    					 Case When T1.orderState = '01' Then 1 Else 0 End targetCnt,
    					 Case When T1.orderState = '00' Then 1 Else 0 End failureCnt
  From (
	      Select TEMP.orderState ,
		         TEMP.stockCnt,
				 TEMP.safeStock,
                 TEMP.holdStock,
				 TEMP.groupID,
				 TEMP.productCode,
				 TEMP.productName,
				 TEMP.orderCode,
				 (TEMP.holdStock-TEMP.stockCnt) as orderCnt,
				 TEMP.stockChk as stockDate,
				 TEMP.companyCode
		    From (
					Select I1.groupID,
					       I1.productCode,
					       T2.productName,
					       ifnull(I1.safeStock,0) as safeStock,/*안전재고수량*/
                           ifnull(I1.holdStock,0) as holdStock,/*보유재고수량*/
                           /*ifnull(I2.stockCnt,0) as stockCnt,*//*재고수량*/ 
                           ifnull((Select A1.stockCnt From adStockDetail A1 Where A1.groupId=I1.groupId and A1.productCode=I1.productCode and I2.stockDate=A1.stockDate),0)  as stockCnt, /*재고수량*/ 
						   ifnull(I2.stockDate,'1999-01-02') as stockChk,/*재고기준일*/
               		       /*ifnull(I3.deferDate,'1999-01-01') as deferChk,*//*보류기준일*/
						   /*ifnull(I4.orderDate,'1999-01-01') as orderChk,*//*발주기준일*/
               			   ifnull(DATE_FORMAT(I5.buyDate, '%Y-%m-%d'),'1999-01-01') as buyChk,/*구매기준일*/
               			   
               			   T2.companyCode,
               			   
                           Case When ifnull(I6.orderState,'01') in ('01','07','08','09') Then 'X' Else ifnull(I6.orderCode,'X') End orderCode,/*최신발주코드*/
                           Case When ifnull(I6.orderState,'01') in ('01','07','08','09') And date_format(now(),'%Y-%m-%d') Between T7.limitStartDate  and  T7.limitEndDate Then '00' /*제한상태*/
                     	   		Else (Case When I6.orderState in ('07','08','09') Then '01' Else ifnull(I6.orderState,'01') End ) /*최신발주상태 (07:등록완료 08:발주보류취소 09:검수취소)->대기상태*/
                     	   		End orderState
                     	   		
					  From adStockMaster I1
					  		  Left Join ( Select groupId, max(stockDate) as stockDate 
                       					  	From adStock
                        			   		Group By groupID
                		 			   	) As I2 On I1.groupId = I2.groupId /*재고기준일*/
						 /*  Left Join(
									 Select groupID,productCode,stockDate,
                     						(Select stockCnt From adStockDetail Where A1.groupId=groupId and A1.productCode=productCode and A1.stockDate=stockDate)  as stockCnt
                					 	From ( 
                        					  Select groupId,productCode , max(stockDate) as stockDate 
                       						  	From adStockDetail 
                        						Group By  groupID,productCode 
                        					 ) As A1
									  ) As I2 On I1.productCode = I2.productCode And I1.groupID = I2.groupID *//*재고기준일*/
						/* Left Join(
									 Select groupID,productCode,deferDate
                					 	From ( 
                        					  Select C2.groupId,C1.productCode , max(C2.deferDateTime) as deferDate 
                       						  	From adOrderDetail C1
                                       				Left Join adOrder C2 On C1.orderCode=C2.orderCode
                        							Group By  groupID,productCode 
                        					 ) As A2
									  ) As I3 On I1.productCode = I3.productCode And I1.groupID = I3.groupID *//*보류기준일*/
                		/* Left Join(
									 Select groupID,productCode,orderDate
                						 From ( 
                        					   Select C4.groupId,C3.productCode , max(C4.orderDateTime) as orderDate 
                       						     From adOrderDetail C3
                                                     Left Join adOrder C4 On C3.orderCode=C4.orderCode
                        							 Group By  groupID,productCode 
                        					  ) As A3
									 ) As I4 On I1.productCode = I4.productCode And I1.groupID = I4.groupID *//*주문기준일*/
                           Left Join(
									 Select groupID,productCode,buyDate
                					 	From ( 
                        					  Select C6.groupId,C5.productCode , max(C6.buyDateTime) as buyDate 
                       						  	From adOrderDetail C5
                                       				Left Join adOrder C6 On C5.orderCode=C6.orderCode
                        							Group By  groupID,productCode 
                        					 ) As A4
									 ) As I5 On I1.productCode = I5.productCode And I1.groupID = I5.groupID /*구매기준일*/   
                           Left Join(
									  Select groupID,productCode,updateDate,
                           					(Select max(orderCode) From adOrderDetail Where A5.groupId=groupId and A5.productCode=productCode and A5.updateDate=updateDateTime)  as orderCode,
                           					(Select C10.orderState 
                               					From adOrderDetail C9
                                    				Left Join adOrder C10 On C9.orderCode = C10.orderCode
                               					Where A5.groupId=groupId and A5.productCode=productCode and A5.updateDate=updateDateTime) as orderState
                					  	From ( 
                        					  Select C8.groupId,C7.productCode,C8.orderCode,C8.orderState, max(C7.updateDateTime) as updateDate 
                       						  	From adOrderDetail C7
                                       				Left Join adOrder C8 On C7.orderCode=C8.orderCode
                        							Group By  groupID,productCode 
                        					 ) A5
									) As I6 On I1.productCode = I6.productCode And I1.groupID = I6.groupID /*업데이트상태 및 주문번호*/  
									Left Join adProductMaster T2 On I1.ProductCode = T2.ProductCode
                   					Left Join adOrderLimit T7 On I1.groupID=T7.groupId And  T2.companyCode=T7.companyCode And T7.deletedYn='N'
					     Where I1.deletedYn='N' And (I1.safeStock > 0 Or I1.holdStock >0)
					     <if test="con_groupId != null and con_groupId != '' and con_groupId != 'G00000'" >
           					AND I1.groupId = #{con_groupId}
           				 </if>
					   ) As TEMP
		      Where TEMP.stockCnt  <![CDATA[<=]]> TEMP.safeStock
					And TEMP.stockChk <![CDATA[>=]]>  TEMP.buyChk  
					And TEMP.stockCnt  <![CDATA[<]]> TEMP.holdStock   
           			AND TEMP.orderState in ('00','01','02')
			  ) T1
              Group By T1.groupID,
			           T1.companyCode,
			           T1.orderState
     )X
	 Group By X.groupID,
			  X.companyCode
) As Y
			           
</select>

<select id="getTargetAddYn"  resultMap="targetVO" parameterType="com.offact.addys.vo.order.TargetVO" >

	Select T1.groupId, ifnull(T2.orderAddYn,'N') as orderAddYn
      From ofGroup T1
         Left Join ( Select groupId,
                            Case When date_format(now(),'%Y-%m-%d') Between addStartDate  and addEndDate Then 'Y' /*추가상태*/
                                 Else 'N' End orderAddYn /*발주추가여부*/
		                        From adOrderAdd
		                        Where groupId=#{con_groupId} And  companyCode=#{con_companyCode} And  deletedYn='N' ) As T2 On T1.groupId = T2.groupId
      Where T1.groupId=#{con_groupId}

</select>

<select id="getTargetDetailList"  resultMap="targetVO" parameterType="com.offact.addys.vo.order.TargetVO" >

  Select T1.orderAddChk,
         T1.groupID,
         T4.groupName,
		 T2.companyCode,
         T3.companyName,
         T1.productCode,
         T2.productName,
         T2.vatRate,
         T1.stockDate,
	   	 T1.stockCnt,
	   	 T1.safeStock,
	   	 T1.holdStock,
	   	 T2.productPrice,
	   	 T2.group1Name,
         (T1.holdStock-T1.StockCnt) as orderCnt,
         T1.stockOrder
  From (
	      Select TEMP.orderAddChk,
	             TEMP.orderState,
		         TEMP.stockCnt,
				 TEMP.safeStock,
                 TEMP.holdStock,
				 TEMP.groupId,
				 TEMP.productCode,
				 TEMP.stockChk As stockDate,
				 Case When TEMP.safeStock>=TEMP.stockCnt Then 0 Else 1 End stockOrder
		      From (
					Select I1.groupID,
					       I1.productCode,
					       ifnull(I1.safeStock,0) as safeStock,/*안전재고수량*/
                           ifnull(I1.holdStock,0) as holdStock,/*보유재고수량*/
                           /*ifnull(I2.stockCnt,0) as stockCnt,*//*재고수량*/ 
                           ifnull((Select A1.stockCnt From adStockDetail A1 Where A1.groupId=I1.groupId and A1.productCode=I1.productCode and I2.stockDate=A1.stockDate),0)  as stockCnt, /*재고수량*/ 
						   ifnull(I2.stockDate,'1999-01-02') as stockChk,/*재고기준일*/
               		       /*ifnull(I3.deferDate,'1999-01-01') as deferChk,*//*보류기준일*/
						   /*ifnull(I4.orderDate,'1999-01-01') as orderChk,*//*발주기준일*/
               			   ifnull(DATE_FORMAT(I5.buyDate, '%Y-%m-%d'),'1999-01-01') as buyChk,/*구매기준일*/
                           ifnull(I6.orderState,'01') as orderState,/*최신발주상태*/
					       I6.orderCode,/*최신발주코드*/
					       Case When date_format(now(),'%Y-%m-%d') Between T7.addStartDate  and  T7.addEndDate Then '01' /*추가상태*/
                                Else '00'
                                End orderAddChk /*발주추가여부*/
					  From adStockMaster I1
					  		  Left Join ( Select groupId, max(stockDate) as stockDate 
                       					  	From adStock
                        			   		Group By groupID
                		 			   	) As I2 On I1.groupId = I2.groupId /*재고기준일*/
						 /*  Left Join(
									 Select groupID,productCode,stockDate,
                     						(Select stockCnt From adStockDetail Where A1.groupId=groupId and A1.productCode=productCode and A1.stockDate=stockDate)  as stockCnt
                					 	From ( 
                        					  Select groupId,productCode , max(stockDate) as stockDate 
                       						  	From adStockDetail 
                        						Group By  groupID,productCode 
                        					 ) As A1
									  ) As I2 On I1.productCode = I2.productCode And I1.groupID = I2.groupID *//*재고기준일*/
						/* Left Join(
									 Select groupID,productCode,deferDate
                					 	From ( 
                        					  Select C2.groupId,C1.productCode , max(C2.deferDateTime) as deferDate 
                       						  	From adOrderDetail C1
                                       				Left Join adOrder C2 On C1.orderCode=C2.orderCode
                        							Group By  groupID,productCode 
                        					 ) As A2
									  ) As I3 On I1.productCode = I3.productCode And I1.groupID = I3.groupID *//*보류기준일*/
                		/* Left Join(
									 Select groupID,productCode,orderDate
                						 From ( 
                        					   Select C4.groupId,C3.productCode , max(C4.orderDateTime) as orderDate 
                       						     From adOrderDetail C3
                                                     Left Join adOrder C4 On C3.orderCode=C4.orderCode
                        							 Group By  groupID,productCode 
                        					  ) As A3
									 ) As I4 On I1.productCode = I4.productCode And I1.groupID = I4.groupID *//*주문기준일*/
                           Left Join(
									 Select groupID,productCode,buyDate
                					 	From ( 
                        					  Select C6.groupId,C5.productCode , max(C6.buyDateTime) as buyDate 
                       						  	From adOrderDetail C5
                                       				Left Join adOrder C6 On C5.orderCode=C6.orderCode
                        							Group By  groupID,productCode 
                        					 ) As A4
									 ) As I5 On I1.productCode = I5.productCode And I1.groupID = I5.groupID /*구매기준일*/   
                           Left Join(
									  Select groupID,productCode,updateDate,
                           					(Select max(orderCode) From adOrderDetail Where A5.groupId=groupId and A5.productCode=productCode and A5.updateDate=updateDateTime)  as orderCode,
                           					(Select C10.orderState 
                               					From adOrderDetail C9
                                    				Left Join adOrder C10 On C9.orderCode = C10.orderCode
                               					Where A5.groupId=groupId and A5.productCode=productCode and A5.updateDate=updateDateTime) as orderState
                					  	From ( 
                        					  Select C8.groupId,C7.productCode,C8.orderCode,C8.orderState, max(C7.updateDateTime) as updateDate 
                       						  	From adOrderDetail C7
                                       				Left Join adOrder C8 On C7.orderCode=C8.orderCode
                        							Group By  groupID,productCode 
                        					 ) A5
									) As I6 On I1.productCode = I6.productCode And I1.groupID = I6.groupID /*업데이트상태 및 주문번호*/  
                                      Left Join adProductMaster T2 On I1.ProductCode = T2.ProductCode
                                      Left Join adCompany T3 On T2.companyCode = T3.companyCode 
                                      Left Join adOrderAdd T7 On I1.groupID=T7.groupId And  T2.companyCode=T7.companyCode And T7.deletedYn='N'
					     Where I1.deletedYn='N' And (I1.safeStock > 0 Or I1.holdStock >0)
					     	AND I1.groupId = #{con_groupId}
					   ) As TEMP
					     Left Join adProductMaster T1 On TEMP.ProductCode = T1.ProductCode
		      Where TEMP.stockCnt  <![CDATA[<]]> TEMP.holdStock
					And TEMP.stockChk <![CDATA[>=]]>  TEMP.buyChk    
                    AND TEMP.orderState in ('01','07','08','09')
			  ) T1
              Left Join adProductMaster T2 On T1.ProductCode = T2.ProductCode And T2.deletedYn='N' 
              Left Join adCompany T3 On T2.companyCode = T3.companyCode 
              Left Join ofGroup T4 On T1.groupId = T4.groupId 
 	Where T2.companyCode =  #{con_companyCode}
 	Order by T2.productName, T1.stockOrder,T1.stockCnt  ASC
</select>

<insert id="deferReasonInsert"  parameterType="com.offact.addys.vo.order.TargetVO" >
		insert into adComment (
				 orderCode
				,commentCategory
            	,commentType
            	,comment 
            	,commentDateTime
            	,commentUserId
		)values(
				 #{orderCode}
				, '01'
	  			, #{deferType}
	  			, #{deferReason}
	  			, now()
	  			, #{deferUserId}
		)
		                        
</insert>

<insert id="insertDefer"  parameterType="com.offact.addys.vo.order.TargetVO" >
		insert into adOrder (
				 orderCode
            	,groupId
            	,companyCode 
            	,faxKey
            	,smsKey
            	,emailKey
            	,deliveryCharge
            	,deliveryEtc
            	,mobilePhone
            	,email
            	,telNumber
            	,faxNumber
            	,orderDate
            	,deliveryDate
            	,deliveryMethod
            	,orderCharge
            	,orderEtc
            	,orderMobilePhone
            	,orderEmail
            	,orderTelNumber
            	,orderFaxNumber
            	,orderAddress
            	,payMethod
            	,sms
            	,memo
            	,deferDateTime
            	,deferUserId
            	,orderState
            	,deliveryName
            	,orderName
            	,safeOrderCnt
            	,orderAddYn
		)values(
				 #{orderCode}
	  			, #{con_groupId}
	  			, #{companyCode}
	  			, #{faxKey}
	  			, #{smsKey}
	  			, #{emailKey}
	  			, #{deliveryCharge}
	  			, #{deliveryEtc}
	  			, #{mobilePhone}
	  			, #{email}
	  			, #{telNumber}
	  			, #{faxNumber}
	  			, #{orderDate}
	  			, #{deliveryDate}
	  			, #{deliveryMethod}
	  			, #{orderCharge}
	  			, #{orderEtc}
	  			, #{orderMobilePhone}
	  			, #{orderEmail}
	  			, #{orderTelNumber}
	  			, #{orderFaxNumber}
	  			, #{orderAddress}
	  			, #{payMethod}
	  			, #{sms}
	  			, #{memo}
	  			, now()
	  			, #{deferUserId}
	  			, #{orderState}
	  			, #{deliveryName}
	  			, #{orderName}
	  			, #{safeOrderCnt}
	  			, #{orderAddYn}
	  			
		)
		ON DUPLICATE KEY UPDATE faxKey = #{faxKey}
            	                ,smsKey = #{smsKey}
            	                ,emailKey = #{emailKey}
            	                ,deliveryCharge = #{deliveryCharge}
            					,deliveryEtc = #{deliveryEtc}
            					,mobilePhone = #{mobilePhone}
            					,email = #{email}
            					,telNumber = #{telNumber}
            					,faxNumber = #{faxNumber}
            					,orderDate = #{orderDate}
            					,deliveryDate = #{deliveryDate}
            					,deliveryMethod = #{deliveryMethod}
            					,orderCharge = #{orderCharge}
            					,orderEtc = #{orderEtc}
            					,orderMobilePhone = #{orderMobilePhone}
            					,orderEmail = #{orderEmail}
            					,orderTelNumber = #{orderTelNumber}
            					,orderFaxNumber = #{orderFaxNumber}
            					,orderAddress = #{orderAddress}
            					,payMethod = #{payMethod}
            					,sms = #{sms}
            					,memo = #{memo}
            					,deferDateTime = now()
            					,deferUserId = #{deferUserId}
            					,orderState = #{orderState}
            					,deliveryName = #{deliveryName}
            					,orderName = #{orderName}
            					,orderAddYn = #{orderAddYn}
		                        
</insert>


<insert id="insertDeferDetail"  parameterType="com.offact.addys.vo.order.TargetVO" >
		insert into adOrderDetail (
				 orderCode
            	,productCode
            	,stockDate 
            	,orderCnt
            	,etc
            	,stockCnt
            	,safeStock
            	,holdStock
            	,lossCnt
            	,addCnt
            	,minusCnt
            	,plusCnt
            	,memo
            	,createUserId
            	,createDateTime
            	,updateUserId
            	,updateDateTime
            	,deletedYn
            	,deferCheck
		)values(
				 #{orderCode}
	  			, #{productCode}
	  			, #{stockDate}
	  			, #{orderCnt}
	  			, #{etc}
	  			, #{stockCnt}
	  			, #{safeStock}
	  			, #{holdStock}
	  			, #{lossCnt}
	  			, #{addCnt}
	  			, #{minusCnt}
	  			, #{plusCnt}
	  			, #{memo}
	  			, #{createUserId}
	  			, now()
	  			, #{createUserId}
	  			, now()
	  			, 'N'
	  			, 'N'
		)
				ON DUPLICATE KEY UPDATE stockDate = #{stockDate}
            					,orderPrice  = #{productPrice}
            					,orderResultPrice  = #{productPrice} 
            					,orderCnt  = #{orderCnt}
            					,orderResultCnt  = #{orderCnt}
            					,vatRate  = #{vatRate}
            					,orderVatRate  = #{vatRate}
            					,etc  = #{etc}
            					,stockCnt  = #{stockCnt}
            					,safeStock  = #{safeStock}
            					,holdStock  = #{holdStock}
            					,lossCnt  = #{lossCnt}
            					,addCnt  = #{addCnt}
            					,minusCnt  = #{minusCnt}
            					,plusCnt = #{plusCnt}
            					,memo  = #{memo}
            					,updateUserId  = #{createUserId}
            					,updateDateTime  = now()
            					,deletedYn  = 'N'
            					,deferCheck  = 'N'
		                        
</insert>

<update id="deferDeletesProc" parameterType="com.offact.addys.vo.order.TargetVO" >
        Update adOrderDetail
       		Set
  				deferCheck = 'N'
 		Where orderCode = #{orderCode}
 		
</update>

<update id="deferUpdateProc" parameterType="java.util.Map" >
        Update adOrderDetail
       		Set
  				deferCheck = 'Y'
 		Where orderCode = #{orderCode}
 			  And productCode = #{productCode}
</update>


<insert id="insertOrder"  parameterType="com.offact.addys.vo.order.TargetVO" >
		insert into adOrder (
				 orderCode
            	,groupId
            	,companyCode 
            	,faxKey
            	,smsKey
            	,emailKey
            	,deliveryCharge
            	,deliveryEtc
            	,mobilePhone
            	,email
            	,telNumber
            	,faxNumber
            	,orderDate
            	,deliveryDate
            	,deliveryMethod
            	,orderCharge
            	,orderEtc
            	,orderMobilePhone
            	,orderEmail
            	,orderTelNumber
            	,orderFaxNumber
            	,orderAddress
            	,payMethod
            	,sms
            	,memo
            	,orderDateTime
            	,orderUserId
            	,orderState
            	,deliveryName
            	,orderName
            	,orderAddYn
		)values(
				 #{orderCode}
	  			, #{con_groupId}
	  			, #{companyCode}
	  			, #{faxKey}
	  			, #{smsKey}
	  			, #{emailKey}
	  			, #{deliveryCharge}
	  			, #{deliveryEtc}
	  			, #{mobilePhone}
	  			, #{email}
	  			, #{telNumber}
	  			, #{faxNumber}
	  			, #{orderDate}
	  			, #{deliveryDate}
	  			, #{deliveryMethod}
	  			, #{orderCharge}
	  			, #{orderEtc}
	  			, #{orderMobilePhone}
	  			, #{orderEmail}
	  			, #{orderTelNumber}
	  			, #{orderFaxNumber}
	  			, #{orderAddress}
	  			, #{payMethod}
	  			, #{sms}
	  			, #{memo}
	  			, now()
	  			, #{orderUserId}
	  			, #{orderState}
	  			, #{deliveryName}
	  			, #{orderName}
	  			, #{orderAddYn}
		)	  			
	  	ON DUPLICATE KEY UPDATE faxKey = #{faxKey}
            	                ,smsKey = #{smsKey}
            	                ,emailKey = #{emailKey}
            	                ,deliveryCharge = #{deliveryCharge}
            					,deliveryEtc = #{deliveryEtc}
            					,mobilePhone = #{mobilePhone}
            					,email = #{email}
            					,telNumber = #{telNumber}
            					,faxNumber = #{faxNumber}
            					,orderDate = #{orderDate}
            					,deliveryDate = #{deliveryDate}
            					,deliveryMethod = #{deliveryMethod}
            					,orderCharge = #{orderCharge}
            					,orderEtc = #{orderEtc}
            					,orderMobilePhone = #{orderMobilePhone}
            					,orderEmail = #{orderEmail}
            					,orderTelNumber = #{orderTelNumber}
            					,orderFaxNumber = #{orderFaxNumber}
            					,orderAddress = #{orderAddress}
            					,payMethod = #{payMethod}
            					,sms = #{sms}
            					,memo = #{memo}
            					,orderDateTime = now()
            					,orderUserId = #{orderUserId}
            					,orderState = #{orderState}
            					,deliveryName = #{deliveryName}
            					,orderName = #{orderName}
            					,orderAddYn = #{orderAddYn}
		                        
</insert>


<insert id="insertOrderDetail"  parameterType="com.offact.addys.vo.order.TargetVO" >
		insert into adOrderDetail (
				 orderCode
            	,productCode
            	,stockDate
            	,orderPrice
            	,orderResultPrice
            	,orderCnt
            	,orderResultCnt
            	,vatRate
            	,orderVatRate
            	,etc
            	,stockCnt
            	,safeStock
            	,holdStock
            	,lossCnt
            	,addCnt
            	,minusCnt
            	,plusCnt
            	,memo
            	,createUserId
            	,createDateTime
            	,updateUserId
            	,updateDateTime
            	,deletedYn
            	,deferCheck
		)values(
				 #{orderCode}
	  			, #{productCode}
	  			, #{stockDate}
	  			, #{productPrice}
	  			, #{productPrice}
	  			, #{orderCnt}
	  			, #{orderCnt}
	  			, #{vatRate}
	  			, #{vatRate}
	  			, #{etc}
	  			, #{stockCnt}
	  			, #{safeStock}
	  			, #{holdStock}
	  			, #{lossCnt}
	  			, #{addCnt}
	  			, #{minusCnt}
	  			, #{plusCnt}
	  			, #{memo}
	  			, #{createUserId}
	  			, now()
	  			, #{createUserId}
	  			, now()
	  			, 'N'
	  			, 'N'
		)
		ON DUPLICATE KEY UPDATE stockDate = #{stockDate}
            					,orderPrice  = #{productPrice}
            					,orderResultPrice  = #{productPrice} 
            					,orderCnt  = #{orderCnt}
            					,orderResultCnt  = #{orderCnt}
            					,vatRate  = #{vatRate}
            					,orderVatRate  = #{vatRate}
            					,etc  = #{etc}
            					,stockCnt  = #{stockCnt}
            					,safeStock  = #{safeStock}
            					,holdStock  = #{holdStock}
            					,lossCnt  = #{lossCnt}
            					,addCnt  = #{addCnt}
            					,minusCnt  = #{minusCnt}
            					,plusCnt  = #{plusCnt}
            					,memo  = #{memo}
            					,updateUserId  = #{createUserId}
            					,updateDateTime  = now()
            					,deletedYn  = 'N'
            					,deferCheck  = 'N'
		                        
</insert>

<select id="getDeferDetail"  resultMap="targetVO" parameterType="com.offact.addys.vo.order.TargetVO" >

  Select deliveryCharge,
         deliveryEtc,
         email,
         mobilePhone,
         telNumber,
         faxNumber,
         orderDate,
         deliveryDate,
         deliveryMethod,
         orderCharge,
         orderEtc,
         orderMobilePhone,
         orderEmail,
         orderTelNumber,
         orderFaxNumber,
         orderAddress,
         payMethod,
         sms,
         memo,
         deliveryName,
         orderName,
         orderAddYn
  From adOrder
  Where orderCode = #{orderCode}
  
 	
</select>

<select id="getDeferDetailList"  resultMap="targetVO" parameterType="com.offact.addys.vo.order.TargetVO" >

    Select T2.groupId,
           T3.groupName,
		   T2.companyCode,
           T4.companyName,
           T1.productCode,
           T5.productName,
           T1.stockDate,
	   	   T1.stockCnt,
	   	   T1.safeStock,
	   	   T1.holdStock,
	   	   T5.productPrice,
           T5.vatRate,
           T1.orderCnt as orderCnt,
           T1.addCnt,
           T1.lossCnt,
           T1.minusCnt,
           T1.plusCnt,
           T1.etc,
           T1.deferCheck,
           case When T1.safeStock >= T1.stockCnt Then 0 Else 1 End stockOrder
  From adOrderDetail T1
       Left Join adOrder T2 On T1.orderCode=T2.orderCode
       Left Join ofGroup T3 On T2.groupId =T3.groupId
       Left Join adCompany T4 On T2.companyCode = T4.companyCode
       Left Join adProductMaster T5 On T1.productCode = T5.productCode
  Where T2.orderState='02'
        And T1.orderCode = #{orderCode}
  Order by (case When T1.safeStock >= T1.stockCnt Then 0 Else 1 End ) , T5.productName ASC
 	
</select>

<update id="updateDefer"  parameterType="com.offact.addys.vo.order.TargetVO" >
		update adOrder 
			set
				orderState = #{orderState}
            	,deletedUserId = #{deletedUserId}
            	,deletedDateTime = now()
            	,deletedYn='Y'
		where orderCode = #{orderCode}
		                        
</update>

<update id="updateDeferDetail"  parameterType="com.offact.addys.vo.order.TargetVO" >
	
		update adOrderDetail 
			set
				 deletedYn = 'Y'
            	,updateUserId = #{deletedUserId}
            	,updateDateTime = now()
		where orderCode = #{orderCode}
		                        
</update>

<select id="getOrderCode"  resultMap="targetVO" parameterType="com.offact.addys.vo.order.TargetVO" >

  Select concat(#{orderCode} ,T3.orderCode) As orderCode
  From (
  Select Case When T2.orderCodeNo <![CDATA[<]]>  10 Then concat('00',T2.orderCodeNo) 
              When T2.orderCodeNo <![CDATA[>=]]>  10 And T2.orderCodeNo  <![CDATA[<]]>   99  Then concat('0',T2.orderCodeNo) 
              Else T2.orderCodeNo End orderCode
    From(
          Select (cast(right(T1.orderCode,3) As unsigned)+1) As orderCodeNo 
            From (
                  Select ifnull(max(orderCode),concat(#{orderCode},'000')) As orderCode 
                    From adOrder where left(orderCode,12)=#{orderCode} ) As T1 
    ) As T2
  ) As T3

    
</select>

</mapper>
